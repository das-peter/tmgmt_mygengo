<?php

/**
 * @file
 * Module file of the translation management Gengo test module.
 */

use Drupal\Component\Serialization\Json;
use Symfony\Component\HttpFoundation\JsonResponse;

/**
 * Helper function to build gengo job.
 */
function tmgmt_mygengo_test_build_response_job($body_src, $body_tgt, $status, $tier, $custom_data, $slug, $position = 0) {

  $job = array();
  $job['lc_src'] = 'en';
  $job['lc_tgt'] = 'de';
  $job['body_src'] = $body_src;
  $job['unit_count'] = str_word_count($job['body_src']);
  // Fake credit calculation.
  $job['credits'] = $job['unit_count'] * .4;
  $job['status'] = $status;
  $job['tier'] = $tier;
  $job['slug'] = $slug;
  $job['job_id'] = rand(1, 100);
  $job['position'] = $position;

  if (!empty($body_tgt)) {
    $job['status'] = 'approved';
  }

  // Add translation if available.
  if (!empty($body_tgt)) {
    $job['body_tgt'] = $body_tgt;
  }

  // For machine translations the job is not wrapped in another object
  // however for human translations it is. So try to reproduce this gengo
  // system variety.
  if ($job['tier'] != 'machine') {
    $job['custom_data'] = $custom_data;
    $job = array_merge(array($custom_data => $job), $job);
  }

  return $job;
}

/**
 * Helper function to run authentication.
 */
function tmgmt_mygengo_test_authenticate() {

  if (isset($_REQUEST['api_key']) && $_REQUEST['api_key'] == 'correct key') {
    $sig = hash_hmac('sha1', $_REQUEST['ts'], 'correct key');
    if ($sig == $_REQUEST['api_sig']) {
      return;
    }
  }

  return new JsonResponse(array(
    'opstat' => 'failure',
    // We do not really need a response here.
    'response' => '',
    'err' => array(array((object) array('msg' => 'Authentication failure', 'code' => 100))),
  ));
}
